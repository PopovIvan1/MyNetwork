@page
@model LoginModel
@using MyNetwork.Models

<h1>@TextModel.Context["login"]</h1>
<div class="row">
    <div class="col-md-4">
        <section>
            <form id="account" method="post">
                <h2>@TextModel.Context["local accaunt"]</h2>
                <hr />
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-floating" style="color:black;">
                    <input asp-for="Input.Name" class="form-control" autocomplete="username" aria-required="true" />
                    <label asp-for="Input.Name" class="form-label">@TextModel.Context["name"]</label>
                </div>
                <div class="form-floating" style="color:black">
                    <input asp-for="Input.Password" class="form-control" autocomplete="current-password" aria-required="true" />
                    <label asp-for="Input.Password" class="form-label">@TextModel.Context["password"]</label>
                </div>
                <div>
                    <div class="checkbox">
                        <label asp-for="Input.RememberMe" class="form-label">
                            <input class="form-check-input" asp-for="Input.RememberMe" />
                        </label>
                        @TextModel.Context["remember"]
                    </div>
                </div>
                <div>
                    <button id="login-submit" type="submit" class="w-100 btn btn-lg btn-primary">@TextModel.Context["login"]</button>
                </div>
            </form>
        </section>
    </div>
    <div class="col-md-6 col-md-offset-2">
        <section>
            <h3>@TextModel.Context["another server"]</h3>
            <hr />
            @{
                if ((Model.ExternalLogins?.Count ?? 0) != 0)
                {
                    <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="form-horizontal">
                        <div>
                            <p>
                                @foreach (var provider in Model.ExternalLogins)
                                {
                                    <button type="submit" class="btn btn-primary" name="provider" value="@provider.Name" title=@TextModel.Context["provider login"]>@provider.DisplayName</button>
                                }
                            </p>
                        </div>
                    </form>
                }
            }
        </section>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
