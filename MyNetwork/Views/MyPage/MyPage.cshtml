@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor

@{
    string tableTextColor;
    if (HttpContextAccessor.HttpContext?.Request.Cookies["theme"] == "dark") tableTextColor = "white";
    else tableTextColor = "dark";
    ViewData["Title"] = "My Page";
}

<div class="text-center">
    @{
        int userLikes = (await ViewData.Model.FindUserByNameAsync(ViewData["username"]?.ToString())).Likes;
    }
    <script>
        document.getElementById('searchForm').insertAdjacentHTML("beforeend", '<p><div style="float: right">@TextModel.Context["your likes"] @userLikes</div></p>');
    </script>
    <h1 class="display-4">@TextModel.Context["my page"]</h1>
</div>
<div class="row">
    <div class="col-md-2">
        <form asp-controller="MyPage" asp-action="NewReview" class="form-horizontal">
            <button type="submit" class="btn btn-primary">@TextModel.Context["new review"]</button>
        </form>
        <p></p>
    </div>
    <div class="col-md-2" style="float: right">
        <form asp-controller="MyPage" asp-action="DeleteProfile" class="form-horizontal">
            <button type="submit" class="btn btn-danger"><i class="bi bi-trash"></i>@TextModel.Context["delete profile"]</button>
        </form>
        <p></p>
    </div>
    @{
        if (CurrentUserSettings.AdminMode == "available")
        {
            <div class="col-md-3">
                <form asp-controller="MyPage" asp-action="AdminMode" class="form-horizontal">
                    <button type="submit" class="btn btn-primary">@TextModel.Context["admin mode"]</button>
                </form>
            </div>
        }
    }
</div>
<h3 style="margin-top: 4%">@TextModel.Context["my reviews"]</h3>
<form asp-controller="MyPage" asp-action="ChangeParameters" class="form-horizontal">
    <div class="form-floating">
        <p></p>
        @TextModel.Context["filter"]
        <select name="categoryFromView" id="categorySelector" onchange="form.submit();">
            <option value="all">@TextModel.Context["all"]</option>
            <option value="no category">@TextModel.Context["no category"]</option>
            <option value="films">@TextModel.Context["films"]</option>
            <option value="games">@TextModel.Context["games"]</option>
            <option value="books">@TextModel.Context["books"]</option>
        </select>
        @TextModel.Context["sort order"]
        <select name="sortOrderFromView" id="sortOrderSelector" onchange="form.submit();">
            <option value="no sort">@TextModel.Context["no sort"]</option>
            <option value="date">@TextModel.Context["sort by date"]</option>
            <option value="popular">@TextModel.Context["sort by popularity"]</option>
        </select>
    </div>
    <p></p>
    <script>
        document.getElementById('categorySelector').value = "@ViewData["category"]?.ToString()";
        document.getElementById('sortOrderSelector').value = "@ViewData["sortOrder"]?.ToString()";
    </script>
</form>
<table class="table" style="border-style: solid; border-color: red; color: @tableTextColor">
    @foreach (var data in await ViewData.Model.SelectUserReviews(ViewData["username"]?.ToString(), ViewData["category"]?.ToString(), ViewData["sortOrder"]?.ToString()))
    {
        <tr>
            <td>
                <form asp-controller="Review" asp-action="EditReview" class="form-horizontal">
                    <button type="submit" class="btn btn-primary" name="review" value="@data.Id"><i class="bi bi-pen"></i> @TextModel.Context["edit"]</button>
                </form>
                <p></p>
                <form asp-controller="Review" asp-action="ReviewPage" class="form-horizontal">
                    <p><button type="submit" class="btn btn-primary" name="review" value="@data.Id"><i class="bi bi-eyeglasses"></i> @TextModel.Context["watch"]</button></p>
                </form>
                <p></p>
                <form asp-controller="Review" asp-action="RemoveReview" class="form-horizontal">
                    <p><button type="submit" class="btn btn-danger" name="reviewId" value="@data.Id"><i class="bi bi-trash"></i> @TextModel.Context["remove"]</button></p>
                </form>
            </td>
            <td id="@data.Id" align="left" style="width: 80%">
                @{
                    User user = await ViewData.Model.GetUserByIdAsync(data.AuthorId.ToString());
                    ViewData.Add("authorName", user.UserName);
                    ViewData.Add("likes", user.Likes);
                    ViewData.Add("reviewTags", string.Join(' ', ViewData.Model.SelectReviewTags(data.Id)));
                    <partial name="../Review/ReviewData" model="data" view-data="ViewData" />
                    ViewData.Remove("authorName");
                    ViewData.Remove("likes");
                    ViewData.Remove("reviewTags");
                }
            </td>
        </tr>
    }
</table>