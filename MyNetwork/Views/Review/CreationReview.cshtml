<div class="row justify-content-md-center">
    <div class="col-md-4">
        <label id="maxFileCount" style="color: red; float: left; display: none">@TextModel.Context["max file count"]</label>
        <section>
            <form asp-controller="Review" asp-action="CreationReview" class="form-horizontal" enctype="multipart/form-data">
                <div class="form-floating" style="color: #555; font-size: 18px; text-align: center; width: 400px; height: 150px; margin: 50px auto; background: #eee; border: 1px solid #ccc;">
                    <input name="image" title="" class="form-control" style="opacity: 0; z-index: -1; width: 400px; height: 400px" type="file" id="dropZone" accept="image/*" multiple />
                    <label class="form-label" id="image">@TextModel.Context["upload image"]</label>
                    <button style="float: right; position: absolute; top: 0px; right: 0px" onclick="clearImage();" type="button"><i class="bi bi-file-excel"></i></button>
                </div>
                <input id="hidenInput" name="isImageDeleted" value="" style="display: none"/>
                <script>
                    let load = document.querySelector('#image');
                    document.querySelector('#dropZone').addEventListener('change', function (e) {
                        let tgt = e.target || window.event.srcElement;
                        let files = tgt.files;
                        if (files.length > 3) {
                            document.getElementById('maxFileCount').style.display = 'block';
                            $("#dropZone")[0].value = "";
                        }
                        else {
                            document.getElementById('maxFileCount').style.display = 'none';
                            load.innerHTML = '';
                            if (files && files.length) {
                                for (let i = 0; i < files.length; i++) {
                                    if (!files[i].type.includes("image")) continue;
                                    let $self = files[i],
                                        fr = new FileReader();
                                    fr.onload = function (e) {
                                        load.insertAdjacentHTML('beforeEnd', `<img src="${e.srcElement.result}" width="30%"/>`);
                                        document.getElementById('dropZone').innerHTML += e.srcElement.result;
                                    }
                                    fr.readAsDataURL(files[i]);
                                };
                            }
                        }
                    });
                    function clearImage() {
                        document.getElementById('maxFileCount').style.display = 'none';
                        $("#dropZone")[0].value = "";
                        document.getElementById('dropZone').innerHTML = '';
                        document.querySelector('#image').innerHTML = '';
                        document.querySelector('#image').insertAdjacentHTML('beforeEnd', '<label>@TextModel.Context["upload image"]</label>');
                        document.getElementById('hidenInput').value = 'yes';
                    }
                </script>
                <p></p>
                <div class="form-floating" style="color:black;">
                    <input id="reviewName" name="reviewName" class="form-control" required aria-required="true" oninvalid="this.setCustomValidity('@TextModel.Context["message error"]')" oninput="this.setCustomValidity('')" />
                    <label class="form-label">@TextModel.Context["review name"]</label>
                </div>
                <div class="form-floating" style="color:black;">
                    <input id="creationName" name="creationName" class="form-control" required aria-required="true" oninvalid="this.setCustomValidity('@TextModel.Context["message error"]')" oninput="this.setCustomValidity('')" />
                    <label class="form-label">@TextModel.Context["creation name"]</label>
                </div>
                <div class="form-floating" id="tags">
                    @TextModel.Context["add tags"]:
                    <p></p>
                    <div class="form-floating" style="color:black;" id="tagContent">
                        <input name="tags" class="form-control" aria-required="true" onchange="addTagLabel();" id="tag" list="dataList" />
                        <label class="form-label">@TextModel.Context["add tag"]</label>
                    </div>
                </div>
                <div class="form-floating">
                    @TextModel.Context["select category"]:
                    <select name="category" id="selector" style="float: right">
                        <option value="no category">@TextModel.Context["no category"]</option>
                        <option value="films">@TextModel.Context["films"]</option>
                        <option value="games">@TextModel.Context["games"]</option>
                        <option value="books">@TextModel.Context["books"]</option>
                    </select>
                </div>
                <p></p>
                <div class="form-floating" style="color:black;">
                    <textarea id="editor" name="description">@ViewData["description"]</textarea>
                </div>
                <div class="form-floating">
                    @TextModel.Context["your rate"]:
                    <input type="number" name="rate" min="0" onchange="checkNumber();" style="float: right" value="0" id="number" />
                </div>
                <p></p>
                <button type="submit" class="btn btn-primary" style="float: right" onclick="suneditor.save();" name="action" id="button"><section id="buttonText"></section></button>
                <datalist id="dataList">
                    @foreach (var tagFromDb in ViewData.Model)
                    {
                        <option>@tagFromDb.Name</option>
                    }
                </datalist>
            </form>
        </section>
    </div>
</div>

<link href="~/suneditor/dist/css/suneditor.min.css" rel="stylesheet">
<script src="~/suneditor/dist/suneditor.min.js"></script>
<script>
    var suneditor = SUNEDITOR.create('editor', {
        display: 'block',
        width: '100%',
        height: '30%',
        popupDisplay: 'full',
        buttonList: [
            ['font', 'fontSize', 'formatBlock'],
            ['paragraphStyle', 'blockquote'],
            ['bold', 'underline', 'align', 'strike', 'subscript', 'superscript', 'horizontalRule', 'list'],
            ['table', 'link'],
            ['align', 'horizontalRule', 'list', 'lineHeight'],
            ['codeView']
        ]
    });
</script>