@model ApplicationContext
@using System;
@using System.Web;
@using System.IO;

@{
    Review data = Model.Reviews.FirstOrDefault(review => review.Id == (int)ViewData["reviewId"]);
}
<form asp-controller="MyPage" asp-action="BackToMyPage" class="form-horizontal">
    <button type="submit" class="btn btn-primary"><i class="bi bi-arrow-left-square"></i> @TextModel.Context["back to your page"]</button>
</form>
<div class="text-center">
    <h1 class="display-4"><i class="bi bi-pen"></i> @TextModel.Context["edit"]</h1>
</div>
<div class="row justify-content-md-center">
    <div class="col-md-4">
        <section>
            <form asp-controller="Review" asp-action="UpdateReview" class="form-horizontal" enctype="multipart/form-data">
                <div class="form-floating" style="color: #555; font-size: 18px; text-align: center; width: 400px; height: 150px; margin: 50px auto; background: #eee; border: 1px solid #ccc;">
                    <input name="image" title="" class="form-control" style="opacity: 0; z-index: -1; width: 400px; height: 400px" type="file" id="dropZone" accept="image/*" />
                    <label class="form-label" id="image">@TextModel.Context["upload image"]</label>
                </div>
                <script>
                    let load = document.querySelector('#image');

                    document.querySelector('#dropZone').addEventListener('change', function (e) {
                        let tgt = e.target || window.event.srcElement,
                            files = tgt.files;

                        load.innerHTML = '';

                        if (files && files.length) {
                            for (let i = 0; i < files.length; i++) {
                                let $self = files[i],
                                    fr = new FileReader();
                                fr.onload = function (e) {
                                    load.insertAdjacentHTML('beforeEnd', `<div class="load-img"><img src="${e.srcElement.result}" width="30%"/><p>${$self.name}</p></div>`);
                                    document.getElementById('dropZone').innerHTML = e.srcElement.result;
                                }
                                fr.readAsDataURL(files[i]);
                            };
                        }
                    });
                </script>
                @if (data.ImageUrl != "")
                {
                    string imgName = data.ImageUrl;
                    byte[] imgBytes = await ImageService.Download(imgName);
                    string str = Convert.ToBase64String(imgBytes);
                    <script>
                        document.querySelector('#image').innerHTML='';
                        document.querySelector('#image').insertAdjacentHTML("beforeend", '<p><img style="width: 30%;" src="data:image/*;base64,@str" alt="Red dot" /></p>');
                    </script>
                }
                <p></p>
                <div class="form-floating" style="color:black;">
                    <input name="reviewName" class="form-control" required aria-required="true" oninvalid="this.setCustomValidity('@TextModel.Context["message error"]')" oninput="this.setCustomValidity('')" value="@data.Name" />
                    <label class="form-label">@TextModel.Context["review name"]</label>
                </div>
                <div class="form-floating" style="color:black;">
                    <input name="creationName" class="form-control" required aria-required="true" oninvalid="this.setCustomValidity('@TextModel.Context["message error"]')" oninput="this.setCustomValidity('')" value="@data.CreationName" />
                    <label class="form-label">@TextModel.Context["creation name"]</label>
                </div>
                <div class="form-floating" id="tags">
                    @TextModel.Context["add tags"]:
                    <p></p>
                    <div class="form-floating" style="color:black;" id="tagContent">
                        <input name="tags" class="form-control" aria-required="true" onchange="addTagLabel();" id="tag" list="dataList" />
                        <label class="form-label">@TextModel.Context["add tag"]</label>
                    </div>
                    @foreach (var tag in ViewData.Model.SelectReviewTags(data.Id))
                    {
                        <script>
                            var str = "@HttpUtility.UrlEncode(tag.Replace(" ", "\u00A0"))";
                            str = decodeURI(str);
                            str = str.replaceAll("%2f", "/").replaceAll("%26nbsp%3b", " ");
                            document.getElementById('tag').value = str;
                            addTagLabel();
                        </script>
                    }
                </div>
                <div class="form-floating">
                    @TextModel.Context["select category"]:
                    <select name="category" id="selector" style="float: right">
                        <option value="no category">@TextModel.Context["no category"]</option>
                        <option value="films">@TextModel.Context["films"]</option>
                        <option value="games">@TextModel.Context["games"]</option>
                        <option value="books">@TextModel.Context["books"]</option>
                    </select>
                </div>
                <script>
                    document.getElementById('selector').value = "@data.Category";
                </script>
                <p></p>
                <div class="form-floating" style="color:black;">
                    <textarea id="editor" name="description">@data.Description</textarea>
                </div>
                <div class="form-floating">
                    @TextModel.Context["your rate"]:
                    <input type="number" name="rate" min="0" onchange="checkNumber();" style="float: right" value="@data.AuthorRate" id="number" />
                </div>
                <p></p>
                <button type="submit" class="btn btn-primary" style="float: right" onclick="suneditor.save();">@TextModel.Context["save changes"]</button>
                <datalist id="dataList">
                    @foreach (var tagFromDb in ViewData.Model.Tags)
                    {
                        <option>@tagFromDb.Name</option>
                    }
                </datalist>
            </form>
        </section>
    </div>
</div>

<link href="~/suneditor/dist/css/suneditor.min.css" rel="stylesheet">
<script src="~/suneditor/dist/suneditor.min.js"></script>
<script>
    var suneditor = SUNEDITOR.create('editor', {
        display: 'block',
        width: '100%',
        height: '30%',
        popupDisplay: 'full',
        buttonList: [
            ['font', 'fontSize', 'formatBlock'],
            ['paragraphStyle', 'blockquote'],
            ['bold', 'underline', 'align', 'strike', 'subscript', 'superscript', 'horizontalRule', 'list'],
            ['table', 'link'],
            ['align', 'horizontalRule', 'list', 'lineHeight'],
            ['codeView']
        ]
    });
</script>