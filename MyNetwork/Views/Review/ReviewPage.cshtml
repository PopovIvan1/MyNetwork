@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@model ApplicationContext
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css" />

<script>
    let color;
</script>

<div class="row justify-content-md-center">
    <div class="col-md-6">

        @{
            string tableTextColor;
            if (HttpContextAccessor.HttpContext?.Request.Cookies["theme"] == "dark") tableTextColor = "white";
            else tableTextColor = "dark";
            Review data = Model.Reviews.FirstOrDefault(review => review.Id == (int)ViewData["reviewId"]);
            if (SignInManager.IsSignedIn(User))
            {
                if (Model.Likes.FirstOrDefault(like => like.UserId == ViewData["userId"] && like.ReviewId == data.Id) != null)
                {
                    <script>
                        color = "blue";
                    </script>
                }
                else
                {
                    <script>
                        color = "";
                    </script>
                }
                Rate rate = Model.Rates.FirstOrDefault(rate => rate.UserId == ViewData["userId"] && rate.ReviewId == data.Id);
                int userRate = 0;
                if (rate != null)
                {
                    userRate = @rate.UserRate;
                }
                <div class="wrapper" style="width: 30%; float: right;" id="likes-@data.Id">
                    <div style="float: right" id="likes">
                        <p>
                            <i class="bi bi-heart" id="heart" onclick="like();"></i>     @TextModel.Context["likes"]<label id="likesCount">@data.Likes</label>
                        </p>
                        <script>
                            document.getElementById('heart').style.color = color;
                        </script>
                        <p></p>
                        @TextModel.Context["your rate"]:
                        <label style="color: yellow" id="yourRate"></label>
                        <script>
                            getUserRate('@userRate.ToString()', 'yourRate');
                            let stars = document.getElementById('yourRate').querySelectorAll("i");
                            stars.forEach((star, i) => {
                                star.onclick = function () { changeRate(i + 1) };
                            })
                        </script>
                    </div>
                </div>
            }
            else
            {
                <div class="wrapper" style="width: 30%; float: right;" id="likes-@data.Id">
                    <div style="float: right" id="likes">
                        @TextModel.Context["likes"]@data.Likes
                    </div>
                </div>
            }
            User user = await ViewData.Model.GetUserByIdAsync(data.AuthorId.ToString());
            ViewData.Add("authorName", user.UserName);
            ViewData.Add("likes", user.Likes);
            ViewData.Add("reviewTags", string.Join(' ', ViewData.Model.SelectReviewTags(data.Id)));
            <partial name="../Review/ReviewData" model="data" view-data="ViewData" />
            ViewData.Remove("authorName");
            ViewData.Remove("likes");
            ViewData.Remove("reviewTags");
            <h4>@TextModel.Context["comments"]</h4>
            <table class="table" style="color: @tableTextColor" id="Comments">
                @foreach (var comment in Model.SelectReviewComments(data.Id))
                {
                    <tr>
                        <td style="width: 40%">
                            @comment.UserName  (<i style="color: green">@comment.UserLikes</i>):
                            <p style="color: grey">@comment.Date.ToShortDateString()</p>
                        </td>
                        <td align="left" style="width: 60%">
                            @comment.Context
                        </td>
                    </tr>
                }
            </table>
            <script>
                function updateComments() {
                    setTimeout(function () {
                        $.ajax({
                            url: "/Review/UpdateComments",
                            method: 'GET',
                            dataType: 'html',
                            data: {
                                currentCommentsCount: document.getElementById('Comments').getElementsByTagName('tr').length,
                                reviewId: @data.Id
                                                            },
                            success: function (comment) {
                                document.getElementById('Comments').insertAdjacentHTML("beforeend", comment);
                            },
                        });
                        updateComments();
                    }, 5000);
                }

                updateComments();
            </script>
            @if (SignInManager.IsSignedIn(User))
            {
                <table class="table" style="color: @tableTextColor">
                    <tr>
                        <td>
                            <form asp-controller="Review" asp-action="NewComment" class="form-horizontal">
                                <div class="form-floating" style="color:black;">
                                    <input class="form-control" onchange="form.submit();" name="commentContext" />
                                    <label class="form-label">@TextModel.Context["your comment"]</label>
                                </div>
                            </form>
                        </td>
                    </tr>
                </table>
            }
        }
    </div>
</div>