@model ApplicationContext
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor

@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">@TextModel.Context["main"]</h1>
</div>
<div class="row justify-content-md-center" style="border-top-style: solid; border-top-color: red">
    <div class="col-md-5">
        <form asp-controller="Home" asp-action="ChangeReviewParameters" class="form-horizontal">
            <div class="form-floating">
                <p></p>
                @TextModel.Context["select category"]:
                <select name="category" id="categorySelector" style="float: right" onchange="form.submit();">
                    <option value="all">@TextModel.Context["all"]</option>
                    <option value="no category">@TextModel.Context["no category"]</option>
                    <option value="films">@TextModel.Context["films"]</option>
                    <option value="games">@TextModel.Context["games"]</option>
                    <option value="books">@TextModel.Context["books"]</option>
                </select>
            </div>
            @if (!string.IsNullOrEmpty(HttpContextAccessor.HttpContext?.Request.Cookies["homeCategory"]))
            {
                <script>
                    document.getElementById('categorySelector').value = "@HttpContextAccessor.HttpContext?.Request.Cookies["homeCategory"]";
                </script>
            }
            <p></p>
            <div class="form-floating">
                @TextModel.Context["select search"]
                <select name="searchTupe" id="searchTypeSelector" style="float: right" onchange="form.submit();">
                    <option value="last views">@TextModel.Context["last views"]</option>
                    <option value="best views">@TextModel.Context["best views"]</option>
                    <option value="tags">@TextModel.Context["tags"]</option>
                </select>
            </div>
            <p></p>
            @if (!string.IsNullOrEmpty(HttpContextAccessor.HttpContext?.Request.Cookies["homeSearchType"]))
            {
                <script>
                    document.getElementById('searchTypeSelector').value = "@HttpContextAccessor.HttpContext?.Request.Cookies["homeSearchType"]";
                </script>
            }
            <div class="form-floating" id="tagsLocation">
                <script>
                    if (document.getElementById('searchTypeSelector').value != "tags") {
                        document.getElementById('tagsLocation').remove();
                    }
                </script>
                @TextModel.Context["popular tags"]
                <p></p>
                <div class="form-floating" id="tags" style="float: right">
                    <div class="form-floating" id="labelForTags">
                        @TextModel.Context["input tag"]
                        <input name="tags" onchange="addTagLabel('#labelForTags');" id="tag" list="dataList" />
                    </div>
                </div>
                @foreach (var popularTag in ViewData["popular tags"].ToString().Split(' '))
                {
                    <div><label class="btn-danger" style="width: 180px" onclick="document.getElementById('tag').value = '@popularTag'; createNewTag();"><i class="bi bi-file-plus" style="float: left"></i>@popularTag</label></div>
                }
                <p></p>
                <button type="submit" class="btn btn-primary">@TextModel.Context["search"]</button>
                <datalist id="dataList">
                    @foreach (var tagFromDb in ViewData.Model.Tags)
                    {
                        <option>@tagFromDb.Name</option>
                    }
                </datalist>
            </div>
            @{
                string tags = HttpContextAccessor.HttpContext?.Request.Cookies["homeTags"] == null ? "" : HttpContextAccessor.HttpContext?.Request.Cookies["homeTags"];
                string category = HttpContextAccessor.HttpContext?.Request.Cookies["homeCategory"] == null ? "all" : HttpContextAccessor.HttpContext?.Request.Cookies["homeCategory"];
                string searchType = HttpContextAccessor.HttpContext?.Request.Cookies["homeSearchType"] == null ? "best views" : HttpContextAccessor.HttpContext?.Request.Cookies["homeSearchType"];
            }
            <script>
                let tagValues = "@HttpContextAccessor.HttpContext?.Request.Cookies["homeTags"]".split(' ');
                tagValues.forEach(item => {
                    document.getElementById('tag').value = decodeURI(item);
                    if (item != "") {
                        createNewTag();
                    }
                })
            </script>
        </form>
    </div>
    <h3>@TextModel.Context["search results"]</h3>
    <p></p>
    <form asp-controller="Review" asp-action="ReviewPage" class="form-horizontal">
        <table class="table" style="border-style: solid; border-color: red; ">
            @foreach (var data in await Model.Services.Reviews.SelectReviewsWithSettings(HttpContextAccessor.HttpContext?.Request.Cookies["homeCategory"], HttpContextAccessor.HttpContext?.Request.Cookies["homeSearchType"], HttpContextAccessor.HttpContext?.Request.Cookies["homeTags"]))
            {
                <tr>
                    <td><button type="submit" class="btn btn-primary" name="review" value="@data.Id"><i class="bi bi-eyeglasses"></i> @TextModel.Context["watch"]</button></td>
                    <td id="@data.Id" align="left" style="width: 80%">
                        <partial name="../Review/ReviewData" model="data" view-data="ViewData" />
                    </td>
                </tr>
            }
        </table>
    </form>
</div>