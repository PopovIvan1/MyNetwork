@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
        <li class="nav-item" style="border-left:solid red">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">@TextModel.Context["hello"] @User.Identity?.Name!</a>
    </li>
        <li class="nav-item" style="border-left:solid red">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark">@TextModel.Context["logout"]</button>
        </form>
    </li>
}
else
{
        <li class="nav-item" style="border-left:solid red">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">@TextModel.Context["register"]</a>
    </li>
        <li class="nav-item" style="border-left:solid red">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">@TextModel.Context["login"]</a>
    </li>
}
</ul>
